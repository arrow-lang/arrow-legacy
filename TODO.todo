  ✔ Buffer @done(2015-02-21 14:15)
    ✔ Should work with and return UTF-32 by default @done(2015-02-21 14:15)

  ☐ Tokenizer
    ✔ Identifiers (Unicode) @done(2015-02-20 00:00)
    ✔ Keywords @done(2015-02-20 07:30)
    ✔ Punctuators (complex) @done(2015-02-19 10:52)
    ✔ Punctuators (simple) @done(2015-02-19 17:18)
    ☐ Strings (double-quote) / Characters (single-quote)
      ☐ Escape sequences
    ☐ Allow numbers to contain '_'
    ✔ Additional punctuators @done(2015-02-21 16:00)
      ✔ arrow `->` @done(2015-02-21 16:00)
      ✔ fat-arrow `=>` @done(2015-02-21 16:00)
      ✔ comma `,` @done(2015-02-21 16:00)
    ✔ Additional keywords @done(2015-02-21 16:01)
      ✔ true @done(2015-02-21 16:00)
      ✔ false @done(2015-02-21 16:00)
      ✔ if @done(2015-02-21 16:00)
      ✔ while @done(2015-02-21 16:00)
      ✔ break @done(2015-02-21 16:00)
      ✔ continue @done(2015-02-21 16:00)
      ✔ return @done(2015-02-21 16:00)
      ✔ global @done(2015-02-21 16:00)
    ✔ Error reporting (unknown token [both ASCII and unicode]) @done(2015-02-21 17:16)

  ☐ Parser
    ✔ Unary Expression @done(2015-02-22 23:40)
    ✔ Integer @done(2015-02-22 23:40)
    ✔ Float @done(2015-02-23 16:15)
    ✔ Binary Expression (`+`, `-`, `*`, `/`, `//`) @done(2015-02-23 21:52)
    ✔ Return @done(2015-02-24 16:25)
    ☐ Function
      ✔ Declare (Identifier & Name) @done(2015-02-24 16:26)
      ☐ Parameters `def add(a, b)`
      ☐ Parameter Type Annotation `def add(a: int, b: int)`
      ☐ Return Type Annotation `def add(a: int, b: int) -> int`
    ☐ Variables (`let _ = ..`)
    ☐ Type Annotations (for variables)
    ☐ Location tracking
    ☐ Function Call
    ☐ Error checking / reporting

  ☐ Fold (constant expressions)
  ☐ Contextual type inference

  ☐ Rename "arrow::Type" to "arrow::Token::Type"
