define internal void @function-select-assign..init() {
  call void @function-select-assign.method()
  ret void
}

define internal void @function-select-assign.method() {
  %a = alloca i128
  br i1 false, label %select-then, label %select-next

select-then:                                      ; preds = %0
  store i128 34, i128* %a
  br label %select-merge5

select-next:                                      ; preds = %0
  br i1 true, label %select-then1, label %select-next2

select-then1:                                     ; preds = %select-next
  br i1 false, label %select-then3, label %select-next4

select-then3:                                     ; preds = %select-then1
  store i128 30, i128* %a
  br label %select-merge

select-next4:                                     ; preds = %select-then1
  store i128 32, i128* %a
  br label %select-merge

select-merge:                                     ; preds = %select-next4, %select-then3
  %1 = phi i128 [ 30, %select-then3 ], [ 32, %select-next4 ]
  br label %select-merge5

select-next2:                                     ; preds = %select-next
  store i128 40, i128* %a
  br label %select-merge5

select-merge5:                                    ; preds = %select-next2, %select-merge, %select-then
  %2 = phi i128 [ 34, %select-then ], [ %1, %select-merge ], [ 40, %select-next2 ]
  %b = alloca i128
  %3 = load i128, i128* %a
  store i128 %3, i128* %b
  %4 = load i128, i128* %b
  call void @exit(i128 %4)
  ret void
}

declare void @exit(i128 signext)

define i32 @main(i32, i8**, i8**) {
  call void @function-select-assign..init()
  ret i32 0
}
