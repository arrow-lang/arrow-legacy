@a = internal global i32 30
@box = internal global { { i32 }, i32, i1 } zeroinitializer
@x = internal global i32 0
@y = internal global i32 0
@z = internal global i1 false

define internal void @"assign.@init"() {
  store i32 40, i32* @a
  %1 = load i32* @a
  %2 = insertvalue { { i32 }, i32, i1 } { { i32 } { i32 1 }, i32 undef, i1 true }, i32 %1, 1
  store { { i32 }, i32, i1 } %2, { { i32 }, i32, i1 }* @box
  %3 = load i32* getelementptr inbounds ({ { i32 }, i32, i1 }* @box, i32 0, i32 0, i32 0)
  store i32 %3, i32* @x
  %4 = load i32* getelementptr inbounds ({ { i32 }, i32, i1 }* @box, i32 0, i32 1)
  store i32 %4, i32* @y
  %5 = load i1* getelementptr inbounds ({ { i32 }, i32, i1 }* @box, i32 0, i32 2)
  store i1 %5, i1* @z
  ret void
}

define i32 @main(i32, i8**, i8**) {
  call void @"assign.@init"()
  ret i32 0
}
